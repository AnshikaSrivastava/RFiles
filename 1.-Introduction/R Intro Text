What is R?

R is a programming language and software environment for statistical computing and graphics supported by 
the R Foundation for Statistical Computing. The R language is widely used among statisticians and data 
miners for developing statistical software and data analysis.


Advantages of R? 
- Open source/ free
- Good graphics
- Reproduceable through R scipts
- Interpretted
- Active community

Disadvantages of R?
- Easy to learn, Hard to master
- You acually have to code, so not all that easy for people who are accustomed to point and click working.

Getting familiar with R. 
Console - Console is actually your command line interpretter
so whatever you type here just press enter and voila! you would get the output in next line ( provided you haven't 
done any syntax error, then you would get a error message ofcourse

numbers can be typed as it is, Strings should be types in dounble quotes.

Example - 
#let's add 2 numbers
5+3

#Let's welcome ourselves to R world shall we?
"Welcome to R's world user"

Lines preceeded by # symbol are actually comments and ignored (but printed) by R environment.

VARIABLES
The concept of variables is same as that in Mathematics or any other programming language. you can store multiple types of data in 
a varible. As a coder my simple advice is make variable names intutive that is it must convey what the variable is for. This really
helps in real life situations where more than one developer works on a project and assigning and keeping track of var1, var2 and var3 
would become difficult specially whenyou have 1000s variables. I am sure not even the one who had created there variables would remember
them eventually. Instead if we are calculating let's say simple interest then my variables would be - principle, ROI, timeInYears

Also it's ale=ways a good practice to comment out the code as it increases readability.

How to create variables? 
It's fairly simple just use the syntanx variableName <- Value. What R does in backend for this kind of command is quite remarkable. 
Note that you haven't denoted any data type for this variable, so R on it's own would go ahead and parse the value, check if that's 
an integer, float or String and assign the data type to the variable automatically.

Example - 
#Lets create a variable.
myFistVariable <- 5 

#this variable is present in R memory. To view it simple type the variabe name in console 
#or Run the variable name like command
myFistVariable

Changing variable values/ data

#changing value and thus data type of variable
myFistVariable <- "now it's a string"
myFistVariable

#now let's create a bunch of variables
height <- 15.3
width <- 9

Listing out all the variables
#let's list out all the variables that are created? use ls()
ls()

Trying to find a variable that doesn't exists?
#type area
> area
Error: object 'area' not found

It's a good practice to manually remove the unused variables from the workspacce, this stops potential clogging of system 
resources when larger data sets are used
#removing unused variables from your workspace
rm(myFistVariable)
> myFistVariable
Error: object 'myFistVariable' not found
